@model Karma.Models.Post
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager


@{
    ViewData["Title"] = Html.DisplayFor(model => model.Title);
}
<head>
    <script src="~/lib/sweetalert/sweetalert2.all.js"></script>
    <link rel="stylesheet" href="~/lib/sweetalert/sweetalert2.all.css">
</head>

<h4>@Post.CompareQuerie(Model) @Post.GetPostTypeName(Model.IsDonation)s</h4>
<h1>
    <bold>@Html.DisplayFor(model => model.Title)</bold>
</h1>

<div>
    <hr />
    Category: @ItemTypes.GetItemType(Model.ItemType)
    <br />
    @Html.DisplayFor(model => model.Description)
    <br />
    @if (Model.ImagePath != null && Model.ImagePath != "")
    {
        <img src="/@Post.ImagesDirName/@Model.ImagePath" asp-append-version="true"
             alt="Item image" class="img-fluid" style="max-width:400px;" />
    }
</div>
@{
    if (User.Identity.IsAuthenticated && User.Identity.Name != Model.UserId)
    {
        <!-- Old method for sending messages
        <button type="button" class="btn btn-success" onclick="@("window.location.href='" + @Url.Action("Create", "Chats", Model) + "'");">
            Send a message
        </button>
        -->
        
        <button type="button" class="btn btn-success" onclick="MessageText()">
            Send a message
        </button>
    }
}

@{
    if (User.Identity.Name != null && User.Identity.Name == Model.UserId)
    {
        if (Model.State == (int)Post.PostState.NotSet || Model.State == (int)Post.PostState.Open)
        {
            <button class="btn btn-success" data-toggle="modal" data-target="#dialog">Mark as reserved.</button>

        }
        else if (Model.State == (int)Post.PostState.Reserved)
        {
            <button class="btn btn-warning" data-toggle="modal" data-target="#dialog">Cancel reservation.</button>

        }
        <br />
    }
    @if (SignInManager.IsSignedIn(User) && User.Identity.Name != Model.UserId)
    {
        <a asp-controller="Admin" asp-action="CreateReport" asp-route-postId="@Model.Id">
            <button class="btn btn-danger">Report</button>
        </a>
    }
}


<div>
    Posted at @Html.DisplayFor(model => model.Date)
</div>
<hr />
<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    async function MessageText() {
        const { value: text } = await Swal.fire({
            input: 'textarea',
            inputLabel: 'Message',
            inputPlaceholder: 'Type your message here...',
            inputAttributes: {
                'aria-label': 'Type your message here'
            },
            confirmButtonColor: '#05718f',
            confirmButtonText: 'Send',
            showCancelButton: true
        });
        if (text) {
            SendMessage(text);
        }
    };

    function SendMessage(text) {
        var token = $('@Html.AntiForgeryToken()').val();
        var parameters = {
            'PostId': @Model.Id,
            'Text': text,
        }


        $.ajax({
            type: "POST",
            contentType: "application/json",
            url: "@Url.Action("Create", "Chats")",
            data: JSON.stringify(parameters),
            headers: {
                'RequestVerificationToken': token
            },
            success: function (request, status, response) {
                Swal.fire({
                    title: "Success!",
                    text: "Your message has been sent!",
                    icon: 'success',
                    confirmButtonColor: '#05718f',
                    confirmButtonText: 'Go to your messages',
                    showCancelButton: true,
                    cancelButtonText: 'Back'
                }).then(result => {
                    if (result.isConfirmed) {
                        window.location.href = '/Messages';
                    }
                });
            },
            error: function () {
                Swal.fire({
                    title: 'Oops!',
                    text: 'Something went wrong, please report it to administrators.',
                    icon: 'error',
                    confirmButtonColor: '#05718f'
                });
            }
        });
    };
</script>

@if (User.Identity.Name != null && User.Identity.Name == Model.UserId)
{
    <script>
        $(() => {
            $('#dialog').on('show.bs.modal', function (event) {
                if (event.relatedTarget.innerHTML == 'Mark as reserved.') {
                    $('#dialog .modal-body').load('@Url.Action("YesNoDialog", "Posts", new { postId = @Model.Id, questionText = "Are you sure you want to reserve this item?", action3 = "ReserveItem", buttonAffirmText = "Reserve" })');
                }
                else if (event.relatedTarget.innerHTML == 'Cancel reservation.') {
                    $('#dialog .modal-body').load('@Url.Action("YesNoDialog", "Posts", new { postId = @Model.Id, questionText = "Are you sure you want to cancel reservation?", action3 = "ReserveItem", buttonAffirmText = "Cancel Reservation"})');
                }
                else if (event.relatedTarget.innerHTML == 'Mark as Completed.') {
                    $('#dialog .modal-body').load('@Url.Action("YesNoDialog", "Posts", new { postId = @Model.Id, questionText = "Did you " + (Model.IsDonation ? "donate" : "receive") + " all items?", action3 = "CompleteItem", buttonAffirmText = "Yes"})');
                }
            });
        });
    </script>
}

